[{"id":"7862ab08f32f430a","type":"tab","label":"RainPoint SA Development","disabled":false,"info":"","env":[]},{"id":"e4056623f50999ec","type":"inject","z":"7862ab08f32f430a","name":"Credentials","props":[{"p":"areaCode","v":"","vt":"str"},{"p":"phoneOrEmail","v":"","vt":"str"},{"p":"payload"},{"p":"count","v":"","vt":"num"}],"repeat":"","crontab":"","once":true,"onceDelay":0.1,"topic":"","payload":"","payloadType":"str","x":130,"y":680,"wires":[["ae09595a31f02ad0"]]},{"id":"11dc5b81a2b5366d","type":"http request","z":"7862ab08f32f430a","name":"Hamgar Login","method":"POST","ret":"obj","paytoqs":"ignore","url":"https://region3.homgarus.com/auth/basic/app/login","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"lang","valueType":"other","valueValue":"en"},{"keyType":"other","keyValue":"appCode","valueType":"other","valueValue":"2"}],"x":640,"y":700,"wires":[["fb96b981b6b714b2","35f2dd11451537b2"]]},{"id":"0386a9e00042e9dd","type":"http request","z":"7862ab08f32f430a","name":"Hamgar Get Home","method":"GET","ret":"obj","paytoqs":"ignore","url":"https://region3.homgarus.com:1443/app/member/appHome/list","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"lang","valueType":"other","valueValue":"en"},{"keyType":"other","keyValue":"appCode","valueType":"other","valueValue":"2"},{"keyType":"other","keyValue":"auth","valueType":"msg","valueValue":"token"}],"x":650,"y":820,"wires":[["2135193b8e262138","ceeb4d986316dc1e"]]},{"id":"05cc3dfb9b47e124","type":"http request","z":"7862ab08f32f430a","name":"Hamgar Devices","method":"GET","ret":"obj","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"lang","valueType":"other","valueValue":"en"},{"keyType":"other","keyValue":"appCode","valueType":"other","valueValue":"2"},{"keyType":"other","keyValue":"auth","valueType":"msg","valueValue":"token"}],"x":640,"y":940,"wires":[["633ca02392f06c50","9c18679f3a716961"]]},{"id":"fb96b981b6b714b2","type":"change","z":"7862ab08f32f430a","name":"","rules":[{"t":"set","p":"token","pt":"msg","to":"payload.data.token","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":640,"y":760,"wires":[["0386a9e00042e9dd"]]},{"id":"59f4df4ebea13536","type":"http request","z":"7862ab08f32f430a","name":"Hamgar Get Device Status","method":"GET","ret":"obj","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"lang","valueType":"other","valueValue":"en"},{"keyType":"other","keyValue":"appCode","valueType":"other","valueValue":"2"},{"keyType":"other","keyValue":"auth","valueType":"msg","valueValue":"token"}],"x":680,"y":1120,"wires":[["8988fa7a9fee5d4a"]]},{"id":"0e7cb120aba17956","type":"debug","z":"7862ab08f32f430a","name":"Devices","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"devices","targetType":"msg","statusVal":"","statusType":"auto","x":920,"y":1000,"wires":[]},{"id":"ceeb4d986316dc1e","type":"function","z":"7862ab08f32f430a","name":"function 9","func":"msg.url = \"https://region3.homgarus.com/app/device/getDeviceByHid?hid=\" + msg.payload.data[0].hid;\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":620,"y":880,"wires":[["05cc3dfb9b47e124"]]},{"id":"74f61b598b474beb","type":"function","z":"7862ab08f32f430a","name":"function 10","func":"msg.url = \"https://region3.homgarus.com/app/device/getDeviceStatus?mid=\" + msg.payload.data[0].mid;\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":630,"y":1060,"wires":[["59f4df4ebea13536"]]},{"id":"9c18679f3a716961","type":"change","z":"7862ab08f32f430a","name":"Devices","rules":[{"t":"set","p":"devices","pt":"msg","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":620,"y":1000,"wires":[["74f61b598b474beb","0e7cb120aba17956"]]},{"id":"5fc1f4f252161fa8","type":"change","z":"7862ab08f32f430a","name":"","rules":[{"t":"set","p":"sensorstatus","pt":"msg","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":660,"y":1240,"wires":[["566a4d3bb08510b9","1b9a1a1b1039cf2c"]]},{"id":"566a4d3bb08510b9","type":"debug","z":"7862ab08f32f430a","name":"Sensor Status","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"sensorstatus","targetType":"msg","statusVal":"","statusType":"auto","x":940,"y":1240,"wires":[]},{"id":"49e532097611cb72","type":"function","z":"7862ab08f32f430a","name":"function 11","func":"msg.sensormodel = msg.devices.data[0].subDevices[msg.count].model\nmsg.sensordid = msg.devices.data[0].subDevices[msg.count].did\nmsg.sensorname = msg.devices.data[0].subDevices[msg.count].name\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":630,"y":1360,"wires":[["6892b17a96491f32","c5dcfe0cb87dc9d5","ac24464fdbc0a6bb"]]},{"id":"ac24464fdbc0a6bb","type":"switch","z":"7862ab08f32f430a","name":"","property":"sensormodel","propertyType":"msg","rules":[{"t":"eq","v":"HCS021FRF","vt":"str"},{"t":"eq","v":"HCS012ARF","vt":"str"},{"t":"eq","v":"HCS008FRF","vt":"str"},{"t":"eq","v":"HCS0528ARF","vt":"str"},{"t":"eq","v":"HCS014ARF","vt":"str"}],"checkall":"true","repair":false,"outputs":5,"x":1210,"y":1120,"wires":[["88a67135498bdf60"],["07dfbf8e8c020949"],["c428b9475e6b48f6"],["61476c5f29802b84"],["93ea5e88b050c7fc"]]},{"id":"88a67135498bdf60","type":"function","z":"7862ab08f32f430a","name":"Soil Moisture","func":"const arraycount = msg.count + 1;\nconst inputString = msg.sensorstatus.data.subDeviceStatus[arraycount].value\nconst outputArray = inputString.split(';');\nconst replacedString = (outputArray[1].replace(\"G=\", \"\"))\nmsg.soilmoisture = replacedString;\nconst inputString2 = msg.soilmoisture;\nconst outputArray2 = inputString2.split(',');\nmsg.soilmoisture = outputArray2;\nmsg.soilmoisture[0] = parseFloat(((((parseFloat(msg.soilmoisture[0])) / 10) - 32) * (5 / 9)).toFixed(2))\nmsg.soilmoisture[1] = parseFloat(msg.soilmoisture[1])\nmsg.soilmoisture[2] = parseFloat(msg.soilmoisture[2])\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1430,"y":260,"wires":[["da6b45b939d7cc06","cc817202436179a6","08f7136db9410c09","7d45d943af61ed9b","13cc16d42ddc255e","6a25b6d9d4d29616","3bf9d0b4eaecd1d2"]]},{"id":"07dfbf8e8c020949","type":"function","z":"7862ab08f32f430a","name":"Rain Gauge","func":"const arraycount = msg.count + 1;\nconst inputString = msg.sensorstatus.data.subDeviceStatus[arraycount].value\nconst outputArray = inputString.split(';');\nmsg.raingauge = outputArray;\nconst inputString2 = msg.raingauge[1];\nconst replacedString = ((((inputString2.replace(\"R=\", \"\")).replace(\"(\", \",\")).replace(\"/\", \",\")).replace(\"/\", \",\")).replace(\")\", \"\");\nconst outputArray2 = replacedString.split(',');\nmsg.raingauge = outputArray2;\nmsg.raingauge[0] = parseFloat(msg.raingauge[0]) / 10;\nmsg.raingauge[1] = parseFloat(msg.raingauge[1]) / 10;\nmsg.raingauge[2] = parseFloat(msg.raingauge[2]) / 10;\nmsg.raingauge[3] = parseFloat(msg.raingauge[3]) / 10;\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1430,"y":600,"wires":[["da6b45b939d7cc06","9303908a8edbf852","e2c8d70f31df04da","ae3ba7be630bab03","30a0c05f914588da","56bc782a7610c85a","67f5bc2681bb7ce8","7bdf766038cfd6ac","bd24b315a660ba1f"]]},{"id":"ae09595a31f02ad0","type":"digest","z":"7862ab08f32f430a","name":"","algorithm":"MD5","x":330,"y":680,"wires":[["bd163f5f9a400625"]]},{"id":"47f7528a8213d9b1","type":"function","z":"7862ab08f32f430a","name":"function 12","func":"const areaCode = msg.areaCode;\nconst phoneOrEmail = msg.phoneOrEmail;\nconst password = msg.password;\nconst deviceId = msg.deviceId;\nmsg.payload = { \"areaCode\": areaCode, \"phoneOrEmail\": phoneOrEmail, \"password\": password, \"deviceId\": deviceId }\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":350,"y":920,"wires":[["11dc5b81a2b5366d"]]},{"id":"d777e7aad2725f7c","type":"random-string","z":"7862ab08f32f430a","size":16,"characters":"0123456789ABCDEF","property":"payload","x":360,"y":800,"wires":[["f6fea8971f0a65fc"]]},{"id":"bd163f5f9a400625","type":"change","z":"7862ab08f32f430a","name":"","rules":[{"t":"set","p":"password","pt":"msg","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":370,"y":740,"wires":[["d777e7aad2725f7c"]]},{"id":"f6fea8971f0a65fc","type":"change","z":"7862ab08f32f430a","name":"","rules":[{"t":"set","p":"deviceId","pt":"msg","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":370,"y":860,"wires":[["47f7528a8213d9b1"]]},{"id":"2135193b8e262138","type":"debug","z":"7862ab08f32f430a","name":"debug 23","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":920,"y":820,"wires":[]},{"id":"5a59f23d4cb51da9","type":"debug","z":"7862ab08f32f430a","name":"debug 24","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":920,"y":1180,"wires":[]},{"id":"633ca02392f06c50","type":"debug","z":"7862ab08f32f430a","name":"debug 38","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":920,"y":940,"wires":[]},{"id":"8988fa7a9fee5d4a","type":"function","z":"7862ab08f32f430a","name":"function 16","func":"// Sort function to sort objects by id\nmsg.payload.data.subDeviceStatus.sort((a, b) => {\n    if (a.id < b.id) return -1;\n    if (a.id > b.id) return 1;\n    return 0;\n});\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":630,"y":1180,"wires":[["5a59f23d4cb51da9","5fc1f4f252161fa8"]]},{"id":"35f2dd11451537b2","type":"debug","z":"7862ab08f32f430a","name":"debug 39","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":920,"y":700,"wires":[]},{"id":"6892b17a96491f32","type":"debug","z":"7862ab08f32f430a","name":"debug 40","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"sensormodel","targetType":"msg","statusVal":"","statusType":"auto","x":920,"y":1320,"wires":[]},{"id":"c5dcfe0cb87dc9d5","type":"debug","z":"7862ab08f32f430a","name":"debug 41","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"sensordid","targetType":"msg","statusVal":"","statusType":"auto","x":920,"y":1380,"wires":[]},{"id":"39ae822671948597","type":"debug","z":"7862ab08f32f430a","name":"debug 42","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"soilmoisture","targetType":"msg","statusVal":"","statusType":"auto","x":2100,"y":220,"wires":[]},{"id":"93ea5e88b050c7fc","type":"function","z":"7862ab08f32f430a","name":"Outdoor Temperature","func":"const arraycount = msg.count + 1;\nconst inputString = msg.sensorstatus.data.subDeviceStatus[arraycount].value\nconst outputArray = inputString.split(';');\nconst replacedString = (((outputArray[1].replace(\"(\", \",\").replace(\"/\", \",\")).replace(\"/\", \",\")).replace(\")\", \"\"));\nmsg.outdoortemp = replacedString;\nconst inputString2 = msg.outdoortemp;\nconst replacedString2 = (((inputString2.replace(\"(\", \",\").replace(\"/\", \",\")).replace(\"/\", \",\")).replace(\")\", \"\"));\nconst outputArray2 = replacedString2.split(',');\nmsg.outdoortemp = outputArray2\nmsg.outdoortemp[0] = parseFloat(((((parseFloat(msg.outdoortemp[0])) / 10) - 32) * (5 / 9)).toFixed(2))\nmsg.outdoortemp[1] = parseFloat(((((parseFloat(msg.outdoortemp[1])) / 10) - 32) * (5 / 9)).toFixed(2))\nmsg.outdoortemp[2] = parseFloat(((((parseFloat(msg.outdoortemp[2])) / 10) - 32) * (5 / 9)).toFixed(2))\nmsg.outdoortemp[4] = parseFloat(msg.outdoortemp[4])\nmsg.outdoortemp[5] = parseFloat(msg.outdoortemp[5])\nmsg.outdoortemp[6] = parseFloat(msg.outdoortemp[6])\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1460,"y":1620,"wires":[["da6b45b939d7cc06","c4bb6042dd814580","b40666df402aea79","7d6e67aa77796320","d6ee0988d5b9e436","1cca587083e93b1b","cd2d61b7611d25ba","f83e58a94e6ea6b3","8b017c3a9f2cc34b","8c14d0f643417db9","2bb8d75644007440","929e03efe7cc2baa","c135fa48a10324c8"]]},{"id":"61476c5f29802b84","type":"function","z":"7862ab08f32f430a","name":"Pool","func":"const arraycount = msg.count + 1;\nconst inputString = msg.sensorstatus.data.subDeviceStatus[arraycount].value\nconst outputArray = inputString.split(';');\nconst replacedString = ((((outputArray[1].replace(\"(\", \",\")).replace(\"/\", \",\")).replace(\"/\", \",\")).replace(\")\", \"\"));\nmsg.pool = replacedString;\nconst inputString2 = msg.pool;\nconst outputArray2 = inputString2.split(',');\nmsg.pool = outputArray2;\nmsg.pool[0] = parseFloat(((((parseFloat(msg.pool[0])) / 10) - 32) * (5 / 9)).toFixed(2))\nmsg.pool[1] = parseFloat(((((parseFloat(msg.pool[1])) / 10) - 32) * (5 / 9)).toFixed(2))\nmsg.pool[2] = parseFloat(((((parseFloat(msg.pool[2])) / 10) - 32) * (5 / 9)).toFixed(2))\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1410,"y":2000,"wires":[["da6b45b939d7cc06","96f0f119b69ecd12","d719c550261d3f10","35aa6bed0dea9c5d","5bc3ae6285483df7","d159e8660596449e","c17ca1201cf8c577"]]},{"id":"c428b9475e6b48f6","type":"function","z":"7862ab08f32f430a","name":"Flowmeter","func":"const arraycount = msg.count + 1;\nconst inputString = msg.sensorstatus.data.subDeviceStatus[arraycount].value\nconst outputArray = inputString.split(';');\nmsg.flowmeter = outputArray[1]\nconst inputString2 = msg.flowmeter;\nconst outputArray2 = inputString2.split(',');\nmsg.flowmeter = outputArray2;\nmsg.flowmeter[1] = parseFloat((((parseFloat(msg.flowmeter[1])) / 10)).toFixed(2))\nmsg.flowmeter[2] = parseFloat((((parseFloat(msg.flowmeter[2])) / 10)).toFixed(2))\nmsg.flowmeter[3] = parseFloat((((parseFloat(msg.flowmeter[3])) / 10)).toFixed(2))\nmsg.flowmeter[4] = parseFloat((((parseFloat(msg.flowmeter[4])) / 10)).toFixed(2))\nmsg.flowmeter[6] = parseFloat((((parseFloat(msg.flowmeter[6])) / 10)).toFixed(2))\nmsg.flowmeter[7] = parseFloat((((parseFloat(msg.flowmeter[7])) / 10)).toFixed(2))\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1430,"y":960,"wires":[["64419535e2ced860"]]},{"id":"64419535e2ced860","type":"function","z":"7862ab08f32f430a","name":"Convert Seconds","func":"// Extract input seconds\nvar inputSeconds = msg.flowmeter[5];\n\n// Calculate hours, minutes, and remaining seconds\nvar hours = Math.floor(inputSeconds / 3600);\nvar minutes = Math.floor((inputSeconds % 3600) / 60);\nvar seconds = inputSeconds % 60;\n\n// Format the output as HH:mm:ss\nvar formattedTime = `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n\n// Create the message object with the formatted time\nmsg.flowmeter[5] = formattedTime;\n\n// Return the message object\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1450,"y":1020,"wires":[["da6b45b939d7cc06","bd177a699d43a78b","8754729b039b1bcc","de21c6a74dcc6d43","effd074fc8be7d63","123be8f582d3b0f5","4e957a0fee5b5593","37947bf073bd89e3","937355bd4cab6f5e","0e4672b8dea4a037","5e796c46ac3ff556","9981ef4cf4fef93c","ddc6ed85998091b0","96aacdeb48e6d4d2","7b4dafdc9038abcc"]]},{"id":"da6b45b939d7cc06","type":"delay","z":"7862ab08f32f430a","name":"","pauseType":"delay","timeout":"1","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"allowrate":false,"outputs":1,"x":2660,"y":240,"wires":[["1b9a1a1b1039cf2c"]]},{"id":"cc817202436179a6","type":"function","z":"7862ab08f32f430a","name":"Discovery Payload - Temperature","func":"// Home Assistant MQTT Discovery Topic\nvar topic = \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/temperature/config\";\n\n// Payload for discovery\nvar payload = {\n    \"name\": \"Rainpoint \" + msg.sensorname + \" Temperature\",\n    \"state_topic\": \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/temperature/state\",\n    \"unit_of_measurement\": \"°C\",\n    \"value_template\": \"{{ value_json.temperature }}\",\n    \"device_class\": \"temperature\"\n};\n\n// Publish discovery configuration\nmsg.topic = topic;\nmsg.payload = JSON.stringify(payload);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1780,"y":220,"wires":[["39ae822671948597","e175a210bb27758f"]]},{"id":"e175a210bb27758f","type":"mqtt out","z":"7862ab08f32f430a","name":"MQTT Out Discovery","topic":"","qos":"","retain":"true","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"8a6b8e3c.09db6","x":2520,"y":1140,"wires":[]},{"id":"08f7136db9410c09","type":"function","z":"7862ab08f32f430a","name":"State Update Payload - Temperature","func":"// State topic and payload\nvar topic = \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/temperature/state\";\n\n// Simulating sensor data\nvar sensorData = {\n    temperature: msg.soilmoisture[1]\n};\n\n// Publish sensor state\nmsg.topic = topic;\nmsg.payload = JSON.stringify(sensorData);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1790,"y":260,"wires":[["5891dc3ba4a6b378"]]},{"id":"cdd71e42c0fca7c7","type":"mqtt out","z":"7862ab08f32f430a","name":"MQTT Out State","topic":"","qos":"","retain":"true","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"8a6b8e3c.09db6","x":2700,"y":1520,"wires":[]},{"id":"7d45d943af61ed9b","type":"function","z":"7862ab08f32f430a","name":"Discovery Payload - Moisture","func":"// Home Assistant MQTT Discovery Topic\nvar topic = \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/moisture/config\";\n\n// Payload for discovery\nvar payload = {\n    \"name\": \"Rainpoint \" + msg.sensorname + \" Moisture\",\n    \"state_topic\": \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/moisture/state\",\n    \"unit_of_measurement\": \"%\",\n    \"value_template\": \"{{ value_json.moisture }}\",\n    \"device_class\": \"moisture\"\n};\n\n// Publish discovery configuration\nmsg.topic = topic;\nmsg.payload = JSON.stringify(payload);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1760,"y":300,"wires":[["e175a210bb27758f"]]},{"id":"13cc16d42ddc255e","type":"function","z":"7862ab08f32f430a","name":"State Update Payload - Moisture","func":"// State topic and payload\nvar topic = \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/moisture/state\";\n\n// Simulating sensor data\nvar sensorData = {\n    moisture: msg.soilmoisture[0]\n};\n\n// Publish sensor state\nmsg.topic = topic;\nmsg.payload = JSON.stringify(sensorData);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1770,"y":340,"wires":[["5891dc3ba4a6b378"]]},{"id":"5891dc3ba4a6b378","type":"delay","z":"7862ab08f32f430a","name":"","pauseType":"delay","timeout":"250","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"allowrate":false,"outputs":1,"x":2490,"y":1520,"wires":[["cdd71e42c0fca7c7"]]},{"id":"6a25b6d9d4d29616","type":"function","z":"7862ab08f32f430a","name":"Discovery Payload - Lux","func":"// Home Assistant MQTT Discovery Topic\nvar topic = \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/lux/config\";\n\n// Payload for discovery\nvar payload = {\n    \"name\": \"Rainpoint \" + msg.sensorname + \" Lux\",\n    \"state_topic\": \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/lux/state\",\n    \"unit_of_measurement\": \"lx\",\n    \"value_template\": \"{{ value_json.lux }}\",\n    \"device_class\": \"illuminance\"\n};\n\n// Publish discovery configuration\nmsg.topic = topic;\nmsg.payload = JSON.stringify(payload);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1750,"y":380,"wires":[["e175a210bb27758f"]]},{"id":"3bf9d0b4eaecd1d2","type":"function","z":"7862ab08f32f430a","name":"State Update Payload - Temperature","func":"// State topic and payload\nvar topic = \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/lux/state\";\n\n// Simulating sensor data\nvar sensorData = {\n    lux: msg.soilmoisture[2]\n};\n\n// Publish sensor state\nmsg.topic = topic;\nmsg.payload = JSON.stringify(sensorData);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1790,"y":420,"wires":[["5891dc3ba4a6b378"]]},{"id":"c52c9a85658a0539","type":"debug","z":"7862ab08f32f430a","name":"debug 43","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"count","targetType":"msg","statusVal":"","statusType":"auto","x":920,"y":1280,"wires":[]},{"id":"1b9a1a1b1039cf2c","type":"function","z":"7862ab08f32f430a","name":"function 17","func":"msg.count = msg.count + 1;\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":630,"y":1300,"wires":[["c52c9a85658a0539","49e532097611cb72"]]},{"id":"9303908a8edbf852","type":"function","z":"7862ab08f32f430a","name":"Discovery Payload - Total","func":"// Home Assistant MQTT Discovery Topic\nvar topic = \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/total/config\";\n\n// Payload for discovery\nvar payload = {\n    \"name\": \"Rainpoint \" + msg.sensorname + \" Total\",\n    \"state_topic\": \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/total/state\",\n    \"unit_of_measurement\": \"mm\",\n    \"value_template\": \"{{ value_json.precipitation }}\",\n    \"device_class\": \"precipitation\"\n};\n\n// Publish discovery configuration\nmsg.topic = topic;\nmsg.payload = JSON.stringify(payload);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1750,"y":480,"wires":[["e175a210bb27758f"]]},{"id":"e2c8d70f31df04da","type":"function","z":"7862ab08f32f430a","name":"State Update Payload - Total","func":"// State topic and payload\nvar topic = \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/total/state\";\n\n// Simulating sensor data\nvar sensorData = {\n    precipitation : msg.raingauge[0]\n};\n\n// Publish sensor state\nmsg.topic = topic;\nmsg.payload = JSON.stringify(sensorData);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1760,"y":520,"wires":[["5891dc3ba4a6b378"]]},{"id":"ae3ba7be630bab03","type":"function","z":"7862ab08f32f430a","name":"Discovery Payload - 1hr","func":"// Home Assistant MQTT Discovery Topic\nvar topic = \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/1hr/config\";\n\n// Payload for discovery\nvar payload = {\n    \"name\": \"Rainpoint \" + msg.sensorname + \" 1hr\",\n    \"state_topic\": \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/1hr/state\",\n    \"unit_of_measurement\": \"mm\",\n    \"value_template\": \"{{ value_json.precipitation }}\",\n    \"device_class\": \"precipitation\"\n};\n\n// Publish discovery configuration\nmsg.topic = topic;\nmsg.payload = JSON.stringify(payload);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1750,"y":560,"wires":[["e175a210bb27758f"]]},{"id":"30a0c05f914588da","type":"function","z":"7862ab08f32f430a","name":"State Update Payload - Total","func":"// State topic and payload\nvar topic = \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/1hr/state\";\n\n// Simulating sensor data\nvar sensorData = {\n    precipitation : msg.raingauge[1]\n};\n\n// Publish sensor state\nmsg.topic = topic;\nmsg.payload = JSON.stringify(sensorData);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1760,"y":600,"wires":[["5891dc3ba4a6b378"]]},{"id":"56bc782a7610c85a","type":"function","z":"7862ab08f32f430a","name":"Discovery Payload - 24 Hours","func":"// Home Assistant MQTT Discovery Topic\nvar topic = \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/24hrs/config\";\n\n// Payload for discovery\nvar payload = {\n    \"name\": \"Rainpoint \" + msg.sensorname + \" 24hrs\",\n    \"state_topic\": \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/24hrs/state\",\n    \"unit_of_measurement\": \"mm\",\n    \"value_template\": \"{{ value_json.precipitation }}\",\n    \"device_class\": \"precipitation\"\n};\n\n// Publish discovery configuration\nmsg.topic = topic;\nmsg.payload = JSON.stringify(payload);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1770,"y":640,"wires":[["e175a210bb27758f"]]},{"id":"67f5bc2681bb7ce8","type":"function","z":"7862ab08f32f430a","name":"State Update Payload - 24 Hours","func":"// State topic and payload\nvar topic = \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/24hrs/state\";\n\n// Simulating sensor data\nvar sensorData = {\n    precipitation : msg.raingauge[2]\n};\n\n// Publish sensor state\nmsg.topic = topic;\nmsg.payload = JSON.stringify(sensorData);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1780,"y":680,"wires":[["5891dc3ba4a6b378"]]},{"id":"7bdf766038cfd6ac","type":"function","z":"7862ab08f32f430a","name":"Discovery Payload - 7 Days","func":"// Home Assistant MQTT Discovery Topic\nvar topic = \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/7days/config\";\n\n// Payload for discovery\nvar payload = {\n    \"name\": \"Rainpoint \" + msg.sensorname + \" 7days\",\n    \"state_topic\": \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/7days/state\",\n    \"unit_of_measurement\": \"mm\",\n    \"value_template\": \"{{ value_json.precipitation }}\",\n    \"device_class\": \"precipitation\"\n};\n\n// Publish discovery configuration\nmsg.topic = topic;\nmsg.payload = JSON.stringify(payload);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1760,"y":720,"wires":[["e175a210bb27758f"]]},{"id":"bd24b315a660ba1f","type":"function","z":"7862ab08f32f430a","name":"State Update Payload - Total","func":"// State topic and payload\nvar topic = \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/7days/state\";\n\n// Simulating sensor data\nvar sensorData = {\n    precipitation : msg.raingauge[2]\n};\n\n// Publish sensor state\nmsg.topic = topic;\nmsg.payload = JSON.stringify(sensorData);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1760,"y":760,"wires":[["5891dc3ba4a6b378"]]},{"id":"bd177a699d43a78b","type":"function","z":"7862ab08f32f430a","name":"Discovery Payload - Real-Time","func":"// Home Assistant MQTT Discovery Topic\nvar topic = \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/realtime/config\";\n\n// Payload for discovery\nvar payload = {\n    \"name\": \"Rainpoint \" + msg.sensorname + \" Real-time\",\n    \"state_topic\": \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/realtime/state\",\n    \"unit_of_measurement\": \"L\",\n    \"value_template\": \"{{ value_json.water }}\",\n    \"device_class\": \"water\"\n};\n\n// Publish discovery configuration\nmsg.topic = topic;\nmsg.payload = JSON.stringify(payload);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1770,"y":820,"wires":[["e175a210bb27758f"]]},{"id":"8754729b039b1bcc","type":"function","z":"7862ab08f32f430a","name":"State Update Payload - Total","func":"// State topic and payload\nvar topic = \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/realtime/state\";\n\n// Simulating sensor data\nvar sensorData = {\n    water: msg.flowmeter[1]\n};\n\n// Publish sensor state\nmsg.topic = topic;\nmsg.payload = JSON.stringify(sensorData);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1760,"y":860,"wires":[["5891dc3ba4a6b378"]]},{"id":"de21c6a74dcc6d43","type":"function","z":"7862ab08f32f430a","name":"Discovery Payload - Current","func":"// Home Assistant MQTT Discovery Topic\nvar topic = \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/current/config\";\n\n// Payload for discovery\nvar payload = {\n    \"name\": \"Rainpoint \" + msg.sensorname + \" current\",\n    \"state_topic\": \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/current/state\",\n    \"unit_of_measurement\": \"L\",\n    \"value_template\": \"{{ value_json.water }}\",\n    \"device_class\": \"water\"\n};\n\n// Publish discovery configuration\nmsg.topic = topic;\nmsg.payload = JSON.stringify(payload);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1760,"y":900,"wires":[["e175a210bb27758f"]]},{"id":"effd074fc8be7d63","type":"function","z":"7862ab08f32f430a","name":"State Update Payload - Current","func":"// State topic and payload\nvar topic = \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/current/state\";\n\n// Simulating sensor data\nvar sensorData = {\n    water: msg.flowmeter[2]\n};\n\n// Publish sensor state\nmsg.topic = topic;\nmsg.payload = JSON.stringify(sensorData);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1770,"y":940,"wires":[["5891dc3ba4a6b378"]]},{"id":"123be8f582d3b0f5","type":"function","z":"7862ab08f32f430a","name":"Discovery Payload - CurrentDuration","func":"// Home Assistant MQTT Discovery Topic\nvar topic = \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/currentduration/config\";\n\n// Payload for discovery\nvar payload = {\n    \"name\": \"Rainpoint \" + msg.sensorname + \" Current Duration\",\n    \"state_topic\": \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/currentduration/state\",\n    \"unit_of_measurement\": \"min\",\n    \"value_template\": \"{{ value_json.water }}\",\n    \"device_class\": \"duration\"\n};\n\n// Publish discovery configuration\nmsg.topic = topic;\nmsg.payload = JSON.stringify(payload);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1790,"y":980,"wires":[["e175a210bb27758f"]]},{"id":"4e957a0fee5b5593","type":"function","z":"7862ab08f32f430a","name":"State Update Payload - CurrentDuration","func":"// State topic and payload\nvar topic = \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/currentduration/state\";\n\n// Simulating sensor data\nvar sensorData = {\n    water: msg.flowmeter[3]\n};\n\n// Publish sensor state\nmsg.topic = topic;\nmsg.payload = JSON.stringify(sensorData);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1800,"y":1020,"wires":[["5891dc3ba4a6b378"]]},{"id":"37947bf073bd89e3","type":"function","z":"7862ab08f32f430a","name":"Discovery Payload - Last","func":"// Home Assistant MQTT Discovery Topic\nvar topic = \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/last/config\";\n\n// Payload for discovery\nvar payload = {\n    \"name\": \"Rainpoint \" + msg.sensorname + \" Last\",\n    \"state_topic\": \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/last/state\",\n    \"unit_of_measurement\": \"L\",\n    \"value_template\": \"{{ value_json.water }}\",\n    \"device_class\": \"water\"\n};\n\n// Publish discovery configuration\nmsg.topic = topic;\nmsg.payload = JSON.stringify(payload);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1750,"y":1060,"wires":[["e175a210bb27758f"]]},{"id":"937355bd4cab6f5e","type":"function","z":"7862ab08f32f430a","name":"State Update Payload - Last","func":"// State topic and payload\nvar topic = \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/last/state\";\n\n// Simulating sensor data\nvar sensorData = {\n    water: msg.flowmeter[4]\n};\n\n// Publish sensor state\nmsg.topic = topic;\nmsg.payload = JSON.stringify(sensorData);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1760,"y":1100,"wires":[["5891dc3ba4a6b378"]]},{"id":"0e4672b8dea4a037","type":"function","z":"7862ab08f32f430a","name":"Discovery Payload - LastDuration","func":"// Home Assistant MQTT Discovery Topic\nvar topic = \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/lastduration/config\";\n\n// Payload for discovery\nvar payload = {\n    \"name\": \"Rainpoint \" + msg.sensorname + \" Last Duration\",\n    \"state_topic\": \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/lastduration/state\",\n    \"unit_of_measurement\": \"min\",\n    \"value_template\": \"{{ value_json.water }}\",\n    \"device_class\": \"duration\"\n};\n\n// Publish discovery configuration\nmsg.topic = topic;\nmsg.payload = JSON.stringify(payload);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1780,"y":1140,"wires":[["e175a210bb27758f"]]},{"id":"5e796c46ac3ff556","type":"function","z":"7862ab08f32f430a","name":"State Update Payload - LastDuration","func":"// State topic and payload\nvar topic = \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/lastduration/state\";\n\n// Simulating sensor data\nvar sensorData = {\n    water: msg.flowmeter[5]\n};\n\n// Publish sensor state\nmsg.topic = topic;\nmsg.payload = JSON.stringify(sensorData);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1790,"y":1180,"wires":[["5891dc3ba4a6b378"]]},{"id":"ddc6ed85998091b0","type":"function","z":"7862ab08f32f430a","name":"State Update Payload - Total Today","func":"// State topic and payload\nvar topic = \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/today/state\";\n\n// Simulating sensor data\nvar sensorData = {\n    water: msg.flowmeter[6]\n};\n\n// Publish sensor state\nmsg.topic = topic;\nmsg.payload = JSON.stringify(sensorData);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1780,"y":1260,"wires":[["5891dc3ba4a6b378"]]},{"id":"9981ef4cf4fef93c","type":"function","z":"7862ab08f32f430a","name":"Discovery Payload - Total Today","func":"// Home Assistant MQTT Discovery Topic\nvar topic = \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/today/config\";\n\n// Payload for discovery\nvar payload = {\n    \"name\": \"Rainpoint \" + msg.sensorname + \" Today\",\n    \"state_topic\": \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/today/state\",\n    \"unit_of_measurement\": \"L\",\n    \"value_template\": \"{{ value_json.water }}\",\n    \"device_class\": \"water\"\n};\n\n// Publish discovery configuration\nmsg.topic = topic;\nmsg.payload = JSON.stringify(payload);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1770,"y":1220,"wires":[["e175a210bb27758f"]]},{"id":"7b4dafdc9038abcc","type":"function","z":"7862ab08f32f430a","name":"State Update Payload - Total Today","func":"// State topic and payload\nvar topic = \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/total/state\";\n\n// Simulating sensor data\nvar sensorData = {\n    water: msg.flowmeter[7]\n};\n\n// Publish sensor state\nmsg.topic = topic;\nmsg.payload = JSON.stringify(sensorData);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1780,"y":1340,"wires":[["5891dc3ba4a6b378"]]},{"id":"96aacdeb48e6d4d2","type":"function","z":"7862ab08f32f430a","name":"Discovery Payload - Total","func":"// Home Assistant MQTT Discovery Topic\nvar topic = \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/total/config\";\n\n// Payload for discovery\nvar payload = {\n    \"name\": \"Rainpoint \" + msg.sensorname + \" Total\",\n    \"state_topic\": \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/total/state\",\n    \"unit_of_measurement\": \"L\",\n    \"value_template\": \"{{ value_json.water }}\",\n    \"device_class\": \"water\"\n};\n\n// Publish discovery configuration\nmsg.topic = topic;\nmsg.payload = JSON.stringify(payload);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1750,"y":1300,"wires":[["e175a210bb27758f"]]},{"id":"b40666df402aea79","type":"function","z":"7862ab08f32f430a","name":"State Update Payload - CurrentTemp","func":"// State topic and payload\nvar topic = \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/currenttemp/state\";\n\n// Simulating sensor data\nvar sensorData = {\n    temperature: msg.outdoortemp[0]\n};\n\n// Publish sensor state\nmsg.topic = topic;\nmsg.payload = JSON.stringify(sensorData);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1790,"y":1440,"wires":[["5891dc3ba4a6b378"]]},{"id":"c4bb6042dd814580","type":"function","z":"7862ab08f32f430a","name":"Discovery Payload - CurrentTemp","func":"// Home Assistant MQTT Discovery Topic\nvar topic = \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/currenttemp/config\";\n\n// Payload for discovery\nvar payload = {\n    \"name\": \"Rainpoint \" + msg.sensorname + \" Current Temperature\",\n    \"state_topic\": \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/currenttemp/state\",\n    \"unit_of_measurement\": \"°C\",\n    \"value_template\": \"{{ value_json.temperature }}\",\n    \"device_class\": \"temperature\"\n};\n\n// Publish discovery configuration\nmsg.topic = topic;\nmsg.payload = JSON.stringify(payload);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1780,"y":1400,"wires":[["e175a210bb27758f"]]},{"id":"d6ee0988d5b9e436","type":"function","z":"7862ab08f32f430a","name":"State Update Payload - HiTemp","func":"// State topic and payload\nvar topic = \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/hitemp/state\";\n\n// Simulating sensor data\nvar sensorData = {\n    temperature: msg.outdoortemp[1]\n};\n\n// Publish sensor state\nmsg.topic = topic;\nmsg.payload = JSON.stringify(sensorData);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1770,"y":1520,"wires":[["5891dc3ba4a6b378"]]},{"id":"7d6e67aa77796320","type":"function","z":"7862ab08f32f430a","name":"Discovery Payload - HiTemp","func":"// Home Assistant MQTT Discovery Topic\nvar topic = \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/hitemp/config\";\n\n// Payload for discovery\nvar payload = {\n    \"name\": \"Rainpoint \" + msg.sensorname + \" High Temperature\",\n    \"state_topic\": \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/hitemp/state\",\n    \"unit_of_measurement\": \"°C\",\n    \"value_template\": \"{{ value_json.temperature }}\",\n    \"device_class\": \"temperature\"\n};\n\n// Publish discovery configuration\nmsg.topic = topic;\nmsg.payload = JSON.stringify(payload);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1760,"y":1480,"wires":[["e175a210bb27758f"]]},{"id":"cd2d61b7611d25ba","type":"function","z":"7862ab08f32f430a","name":"State Update Payload - LowTemp","func":"// State topic and payload\nvar topic = \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/lowtemp/state\";\n\n// Simulating sensor data\nvar sensorData = {\n    temperature: msg.outdoortemp[2]\n};\n\n// Publish sensor state\nmsg.topic = topic;\nmsg.payload = JSON.stringify(sensorData);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1780,"y":1600,"wires":[["5891dc3ba4a6b378"]]},{"id":"1cca587083e93b1b","type":"function","z":"7862ab08f32f430a","name":"Discovery Payload - LowTemp","func":"// Home Assistant MQTT Discovery Topic\nvar topic = \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/lowtemp/config\";\n\n// Payload for discovery\nvar payload = {\n    \"name\": \"Rainpoint \" + msg.sensorname + \" Low Temperature\",\n    \"state_topic\": \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/lowtemp/state\",\n    \"unit_of_measurement\": \"°C\",\n    \"value_template\": \"{{ value_json.temperature }}\",\n    \"device_class\": \"temperature\"\n};\n\n// Publish discovery configuration\nmsg.topic = topic;\nmsg.payload = JSON.stringify(payload);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1770,"y":1560,"wires":[["e175a210bb27758f"]]},{"id":"f83e58a94e6ea6b3","type":"function","z":"7862ab08f32f430a","name":"Discovery Payload - CurrentHumidity","func":"// Home Assistant MQTT Discovery Topic\nvar topic = \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/currenthumidity/config\";\n\n// Payload for discovery\nvar payload = {\n    \"name\": \"Rainpoint \" + msg.sensorname + \" Current Humidity\",\n    \"state_topic\": \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/currenthumidity/state\",\n    \"unit_of_measurement\": \"%\",\n    \"value_template\": \"{{ value_json.temperature }}\",\n    \"device_class\": \"humidity\"\n};\n\n// Publish discovery configuration\nmsg.topic = topic;\nmsg.payload = JSON.stringify(payload);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1790,"y":1640,"wires":[["e175a210bb27758f"]]},{"id":"8b017c3a9f2cc34b","type":"function","z":"7862ab08f32f430a","name":"State Update Payload - Currenthumidity","func":"// State topic and payload\nvar topic = \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/currenthumidity/state\";\n\n// Simulating sensor data\nvar sensorData = {\n    temperature: msg.outdoortemp[4]\n};\n\n// Publish sensor state\nmsg.topic = topic;\nmsg.payload = JSON.stringify(sensorData);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1800,"y":1680,"wires":[["5891dc3ba4a6b378"]]},{"id":"8c14d0f643417db9","type":"function","z":"7862ab08f32f430a","name":"Discovery Payload - High Humidity","func":"// Home Assistant MQTT Discovery Topic\nvar topic = \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/highhumidity/config\";\n\n// Payload for discovery\nvar payload = {\n    \"name\": \"Rainpoint \" + msg.sensorname + \" High Humidity\",\n    \"state_topic\": \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/highhumidity/state\",\n    \"unit_of_measurement\": \"%\",\n    \"value_template\": \"{{ value_json.temperature }}\",\n    \"device_class\": \"humidity\"\n};\n\n// Publish discovery configuration\nmsg.topic = topic;\nmsg.payload = JSON.stringify(payload);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1780,"y":1720,"wires":[["e175a210bb27758f"]]},{"id":"2bb8d75644007440","type":"function","z":"7862ab08f32f430a","name":"State Update Payload - High Humidity","func":"// State topic and payload\nvar topic = \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/highhumidity/state\";\n\n// Simulating sensor data\nvar sensorData = {\n    temperature: msg.outdoortemp[5]\n};\n\n// Publish sensor state\nmsg.topic = topic;\nmsg.payload = JSON.stringify(sensorData);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1790,"y":1760,"wires":[["5891dc3ba4a6b378"]]},{"id":"929e03efe7cc2baa","type":"function","z":"7862ab08f32f430a","name":"Discovery Payload - Low Humidity","func":"// Home Assistant MQTT Discovery Topic\nvar topic = \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/lowhumidity/config\";\n\n// Payload for discovery\nvar payload = {\n    \"name\": \"Rainpoint \" + msg.sensorname + \" Low Humidity\",\n    \"state_topic\": \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/lowhumidity/state\",\n    \"unit_of_measurement\": \"%\",\n    \"value_template\": \"{{ value_json.temperature }}\",\n    \"device_class\": \"humidity\"\n};\n\n// Publish discovery configuration\nmsg.topic = topic;\nmsg.payload = JSON.stringify(payload);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1780,"y":1800,"wires":[["e175a210bb27758f"]]},{"id":"c135fa48a10324c8","type":"function","z":"7862ab08f32f430a","name":"State Update Payload - Currenthumidity","func":"// State topic and payload\nvar topic = \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/lowhumidity/state\";\n\n// Simulating sensor data\nvar sensorData = {\n    temperature: msg.outdoortemp[6]\n};\n\n// Publish sensor state\nmsg.topic = topic;\nmsg.payload = JSON.stringify(sensorData);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1800,"y":1840,"wires":[["5891dc3ba4a6b378"]]},{"id":"d719c550261d3f10","type":"function","z":"7862ab08f32f430a","name":"State Update Payload - CurrentTemp","func":"// State topic and payload\nvar topic = \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/currenttemp/state\";\n\n// Simulating sensor data\nvar sensorData = {\n    temperature: msg.pool[0]\n};\n\n// Publish sensor state\nmsg.topic = topic;\nmsg.payload = JSON.stringify(sensorData);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1790,"y":1940,"wires":[["5891dc3ba4a6b378"]]},{"id":"96f0f119b69ecd12","type":"function","z":"7862ab08f32f430a","name":"Discovery Payload - CurrentTemp","func":"// Home Assistant MQTT Discovery Topic\nvar topic = \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/currenttemp/config\";\n\n// Payload for discovery\nvar payload = {\n    \"name\": \"Rainpoint \" + msg.sensorname + \" Current Temperature\",\n    \"state_topic\": \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/currenttemp/state\",\n    \"unit_of_measurement\": \"°C\",\n    \"value_template\": \"{{ value_json.temperature }}\",\n    \"device_class\": \"temperature\"\n};\n\n// Publish discovery configuration\nmsg.topic = topic;\nmsg.payload = JSON.stringify(payload);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1780,"y":1900,"wires":[["e175a210bb27758f"]]},{"id":"5bc3ae6285483df7","type":"function","z":"7862ab08f32f430a","name":"State Update Payload - HiTemp","func":"// State topic and payload\nvar topic = \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/hitemp/state\";\n\n// Simulating sensor data\nvar sensorData = {\n    temperature: msg.pool[1]\n};\n\n// Publish sensor state\nmsg.topic = topic;\nmsg.payload = JSON.stringify(sensorData);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1770,"y":2020,"wires":[["5891dc3ba4a6b378"]]},{"id":"35aa6bed0dea9c5d","type":"function","z":"7862ab08f32f430a","name":"Discovery Payload - HiTemp","func":"// Home Assistant MQTT Discovery Topic\nvar topic = \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/hitemp/config\";\n\n// Payload for discovery\nvar payload = {\n    \"name\": \"Rainpoint \" + msg.sensorname + \" High Temperature\",\n    \"state_topic\": \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/hitemp/state\",\n    \"unit_of_measurement\": \"°C\",\n    \"value_template\": \"{{ value_json.temperature }}\",\n    \"device_class\": \"temperature\"\n};\n\n// Publish discovery configuration\nmsg.topic = topic;\nmsg.payload = JSON.stringify(payload);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1760,"y":1980,"wires":[["e175a210bb27758f"]]},{"id":"c17ca1201cf8c577","type":"function","z":"7862ab08f32f430a","name":"State Update Payload - LowTemp","func":"// State topic and payload\nvar topic = \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/lowtemp/state\";\n\n// Simulating sensor data\nvar sensorData = {\n    temperature: msg.pool[2]\n};\n\n// Publish sensor state\nmsg.topic = topic;\nmsg.payload = JSON.stringify(sensorData);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1780,"y":2100,"wires":[["5891dc3ba4a6b378"]]},{"id":"d159e8660596449e","type":"function","z":"7862ab08f32f430a","name":"Discovery Payload - LowTemp","func":"// Home Assistant MQTT Discovery Topic\nvar topic = \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/lowtemp/config\";\n\n// Payload for discovery\nvar payload = {\n    \"name\": \"Rainpoint \" + msg.sensorname + \" Low Temperature\",\n    \"state_topic\": \"homeassistant/sensor/rainpoint\" + msg.sensordid + \"/lowtemp/state\",\n    \"unit_of_measurement\": \"°C\",\n    \"value_template\": \"{{ value_json.temperature }}\",\n    \"device_class\": \"temperature\"\n};\n\n// Publish discovery configuration\nmsg.topic = topic;\nmsg.payload = JSON.stringify(payload);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1770,"y":2060,"wires":[["e175a210bb27758f"]]},{"id":"8a6b8e3c.09db6","type":"mqtt-broker","name":"MQTT Broker","broker":"x.x.x.x","port":"1883","clientid":"","autoConnect":true,"usetls":false,"compatmode":false,"protocolVersion":"4","keepalive":"60","cleansession":true,"autoUnsubscribe":true,"birthTopic":"","birthQos":"0","birthPayload":"","birthMsg":{},"closeTopic":"","closeQos":"0","closePayload":"","closeMsg":{},"willTopic":"","willQos":"0","willPayload":"","willMsg":{},"userProps":"","sessionExpiry":""}]